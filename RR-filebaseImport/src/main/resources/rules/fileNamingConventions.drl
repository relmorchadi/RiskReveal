//package almf.rules
//
//import com.scor.rr.importBatch.businessrules.bean.BusinessRulesBean;
//import com.scor.rr.domain.entities.cat.CATRequest;
//import com.scor.rr.domain.entities.references.cat.UWAnalysis;
//import com.scor.rr.domain.entities.omega.Contract;
//import com.scor.rr.domain.entities.references.cat.Insured;
//import com.scor.rr.domain.entities.cat.ReferencePortfolio;
//import com.scor.rr.importBatch.processing.batch.BaseFileWriter;
//import org.apache.commons.lang3.StringUtils;
//import java.text.SimpleDateFormat;
//
////base
//rule "baseFileNameAccInsured"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "ACCOUNT" )
//       $car: CATRequest() from $businessRulesBean.inputData["catRequest"]
//       $uwa: UWAnalysis() from $car.UWAnalysis
//       $contract: Contract() from $uwa.contract
//       $insured: Insured() from $contract.insured
//       $carId: String() from $businessRulesBean.inputData["carID"]
//       $div: String() from $businessRulesBean.inputData["division"]
//       $type: String() from $businessRulesBean.inputData["type"]
//       $extractionDate: java.util.Date() from $businessRulesBean.inputData["extractionDate"]
//       $vendor: String() from $businessRulesBean.inputData["vendor"]
//       $system: String() from $businessRulesBean.inputData["system"]
//       $version: String() from $businessRulesBean.inputData["version"]
//       $format: SimpleDateFormat() from new SimpleDateFormat("yyyyMMdd-HHmmss")
//    then
//        modify ($businessRulesBean) {setOutputData("baseFileName","F_A_"+StringUtils.left($insured.getName().trim().replaceAll(" +", " ").replaceAll("[^-a-zA-Z0-9\\s]", "").replaceAll(" ", "-").replaceAll("\\.",""),19)+"_"+$contract.getContractID()+"_"+StringUtils.leftPad($div, 2, "0")+"_"+$contract.getYear().toString()+"-"+$contract.getFormattedOrderNumber()+"_"+$type+"_"+$format.format($extractionDate)+"_"+$vendor+"_"+$system+"_"+$version)}
//end
//
//rule "baseFileNameAccNoInsured"
// when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "ACCOUNT" )
//       $car: CATRequest() from $businessRulesBean.inputData["catRequest"]
//       $uwa: UWAnalysis() from $car.UWAnalysis
//       $contract: Contract() from $uwa.contract
//       not $insured: Insured() from $contract.insured
//       $carId: String() from $businessRulesBean.inputData["carID"]
//       $div: String() from $businessRulesBean.inputData["division"]
//       $type: String() from $businessRulesBean.inputData["type"]
//       $extractionDate: java.util.Date() from $businessRulesBean.inputData["extractionDate"]
//       $vendor: String() from $businessRulesBean.inputData["vendor"]
//       $system: String() from $businessRulesBean.inputData["system"]
//       $version: String() from $businessRulesBean.inputData["version"]
//       $format: SimpleDateFormat() from new SimpleDateFormat("yyyyMMdd-HHmmss")
//    then
//        modify ($businessRulesBean) {setOutputData("baseFileName","F_A_"+"UNKNOWN"+"_"+$contract.getContractID()+"_"+StringUtils.leftPad($div, 2, "0")+"_"+$contract.getYear().toString()+"-"+$contract.getFormattedOrderNumber()+"_"+$type+"_"+$format.format($extractionDate)+"_"+$vendor+"_"+$system+"_"+$version)}
//end
//
//rule "baseFileNamePtf"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "PORTFOLIO" )
//       $car: CATRequest() from $businessRulesBean.inputData["catRequest"]
//       $refPtf: ReferencePortfolio() from $car.referencePortfolio
//       $extractionDate: java.util.Date() from $businessRulesBean.inputData["extractionDate"]
//       $vendor: String() from $businessRulesBean.inputData["vendor"]
//       $system: String() from $businessRulesBean.inputData["system"]
//       $version: String() from $businessRulesBean.inputData["version"]
//       $pfversion: String() from $refPtf.version.toString()
//       $type: String() from $businessRulesBean.inputData["type"]
//       $format: SimpleDateFormat() from new SimpleDateFormat("yyyyMMdd-HHmmss")
//       $format2: SimpleDateFormat() from new SimpleDateFormat("yyyyMMdd")
//    then
//        modify ($businessRulesBean) {setOutputData("baseFileName","F_P_SBS-Monthly_InForce_"+$format2.format($refPtf.getInForceDate())+"_"+StringUtils.leftPad($pfversion, 2, "0")+"_"+$refPtf.getPortfolioScope().getCode()+"_"+$type+"_"+$format.format($extractionDate)+"_"+$vendor+"_"+$system+"_"+$version)}
//end
//
//rule "suffixPtfELT"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "PORTFOLIO" && $map2:inputData["type"] == "ELT" )
//       $regionPeril: String() from $businessRulesBean.inputData["regionPeril"]
//       $currency: String() from $businessRulesBean.inputData["currency"]
//       $model: String() from $businessRulesBean.inputData["model"]
//       $sfx: String() from $businessRulesBean.inputData["sfx"]
//    then
//        modify ($businessRulesBean) {setOutputData("suffix","_"+$regionPeril+"_GR_"+$currency+"_"+$model+"_"+$sfx)}
//end
//
//rule "suffixPtfPLT"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "PORTFOLIO" && $map2:inputData["type"] == "PLT" )
//       $regionPeril: String() from $businessRulesBean.inputData["regionPeril"]
//       $currency: String() from $businessRulesBean.inputData["currency"]
//       $model: String() from $businessRulesBean.inputData["model"]
//       $sfx: String() from $businessRulesBean.inputData["sfx"]
//    then
//        modify ($businessRulesBean) {setOutputData("suffix","_"+$regionPeril+"_GP_"+$currency+"_"+$model+"_"+$sfx)}
//end
//
//rule "suffixAccountPLT"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "ACCOUNT" && $map2:inputData["type"] == "PLT" )
//       $regionPeril: String() from $businessRulesBean.inputData["regionPeril"]
//       $currency: String() from $businessRulesBean.inputData["currency"]
//       $carID: String() from $businessRulesBean.inputData["carID"]
//       $periodBasisStr: String() from $businessRulesBean.inputData["periodBasisStr"]
//       $model: String() from $businessRulesBean.inputData["model"]
//       $sfx: String() from $businessRulesBean.inputData["sfx"]
//    then
//        modify ($businessRulesBean) {setOutputData("suffix","_"+$regionPeril+"_UP_"+$currency+"_"+$carID+"_"+$periodBasisStr+"_"+$model+"_"+$sfx)}
//end
//
//rule "suffixAccountELT"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "ACCOUNT" && $map2:inputData["type"] == "ELT" )
//       $regionPeril: String() from $businessRulesBean.inputData["regionPeril"]
//       $currency: String() from $businessRulesBean.inputData["currency"]
//       $carID: String() from $businessRulesBean.inputData["carID"]
//       $periodBasisStr: String() from $businessRulesBean.inputData["periodBasisStr"]
//       $model: String() from $businessRulesBean.inputData["model"]
//       $sfx: String() from $businessRulesBean.inputData["sfx"]
//       $fpToUse: String() from $businessRulesBean.inputData["fpToUse"]
//    then
//        modify ($businessRulesBean) {setOutputData("suffix","_"+$regionPeril+"_"+$fpToUse+"_"+$currency+"_"+$carID+"_"+$periodBasisStr+"_"+$model+"_"+$sfx)}
//end
//
//rule "pricingAggSuffix"
//      when
//         $businessRulesBean : BusinessRulesBean( $map:inputData.size() >= 0 )
//         $periodBasisStr: String() from $businessRulesBean.inputData["periodBasisStr"]
//         $carID: String() from $businessRulesBean.inputData["carID"]
//         $currency: String() from $businessRulesBean.inputData["currency"]
//      then
//          modify ($businessRulesBean) {setOutputData("pricingAggSuffix","_"+"UF_"+$carID+"_"+$periodBasisStr+"_INTERNAL_COM-PE_"+$currency)}
//end
//
//rule "pricingRPSuffix"
//         when
//            $businessRulesBean : BusinessRulesBean( $map:inputData.size() >= 0 )
//            $periodBasisStr: String() from $businessRulesBean.inputData["periodBasisStr"]
//            $carID: String() from $businessRulesBean.inputData["carID"]
//            $regionPeril: String() from $businessRulesBean.inputData["regionPeril"]
//            $currency: String() from $businessRulesBean.inputData["currency"]
//         then
//             modify ($businessRulesBean) {setOutputData("pricingRPSuffix","_"+"UF_"+$carID+"_"+$periodBasisStr+"_INTERNAL_DAT-PE_"+$regionPeril+"_"+$currency)}
//end
//
//rule "pricingPortfolioSuffix"
//      when
//         $businessRulesBean : BusinessRulesBean( $map:inputData.size() >= 0 )
//         $regionPeril: String() from $businessRulesBean.inputData["regionPeril"]
//         $currency: String() from $businessRulesBean.inputData["currency"]
//      then
//          modify ($businessRulesBean) {setOutputData("portfolioPricingSuffix","_"+"GF_INTERNAL_DAT-PE_"+$regionPeril+"_"+$currency)}
//end
//
//rule "fwSuffix"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData.size() >= 0 )
//       $periodBasisStr: String() from $businessRulesBean.inputData["periodBasisStr"]
//       $carID: String() from $businessRulesBean.inputData["carID"]
//       $fpToUse: String() from $businessRulesBean.inputData["fpToUse"]
//    then
//        modify ($businessRulesBean) {setOutputData("fwACC","_"+$carID+"_"+$periodBasisStr+"_INTERNAL_ACC-FW")}
//        modify ($businessRulesBean) {setOutputData("fwLOC","_"+$carID+"_"+$periodBasisStr+"_INTERNAL_LOC-FW")}
//        modify ($businessRulesBean) {setOutputData("fwEPC","_"+$fpToUse+"_"+$carID+"_"+$periodBasisStr+"_INTERNAL_EPC-FW")}
//end
//
//
//rule "firstDirFAC"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["domain"] == "FAC" )
//    then
//        modify ($businessRulesBean) {setOutputData("firstDir","Facultative")}
//end
//
//rule "firstDirTTY"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["domain"] == "TTY" )
//    then
//        modify ($businessRulesBean) {setOutputData("firstDir","Treaty")}
//end
//
//rule "pathElementsAccount"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "ACCOUNT" )
//       $car: CATRequest() from $businessRulesBean.inputData["catRequest"]
//       $uwa: UWanalysis() from $car.uWanalysis
//       $contract: Contract() from $uwa.contract
//       $carId: String() from $businessRulesBean.inputData["carID"]
//       $div: String() from $businessRulesBean.inputData["division"]
//    then
//        modify ($businessRulesBean) {setOutputData("pathElements",new String[]{"Account",$contract.getContractID(),$contract.getYear().toString()+"-"+$contract.getFormattedOrderNumber(),$carId,$div})}
//end
//
//rule "pathElementsPortfolio"
//    when
//       $businessRulesBean : BusinessRulesBean( $map:inputData["jobType"] == "PORTFOLIO" )
//       $car: CATPortfolioRequest() from $businessRulesBean.inputData["catRequest"]
//       $refPtf: ReferencePortfolio() from $car.referencePortfolio
//       $format: SimpleDateFormat() from new SimpleDateFormat("yyyyMMdd")
//    then
//        modify ($businessRulesBean) {setOutputData("pathElements",new String[]{"Portfolio", "InForce",$refPtf.getPeriodYear()+"-"+StringUtils.leftPad($refPtf.getPeriodMonth().toString(), 2, "0"),StringUtils.leftPad($refPtf.getVersion().toString(), 2, "0")+"-"+$format.format($refPtf.getInForceDate())})}
//end
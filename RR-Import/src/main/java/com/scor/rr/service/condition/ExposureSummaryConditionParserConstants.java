package com.scor.rr.service.condition;

/**
 * Token literal values and constants. Generated by
 * org.javacc.parser.OtherFilesGen#start()
 */
public interface ExposureSummaryConditionParserConstants {

	/** End of File. */
	int EOF = 0;
	/** RegularExpression Id. */
	int EOL = 1;
	/** RegularExpression Id. */
	int SPACECHAR = 2;
	/** RegularExpression Id. */
	int SPACE_SEPARATOR = 3;
	/** RegularExpression Id. */
	int QUOTECHAR = 4;
	/** RegularExpression Id. */
	int DEFINITION = 5;
	/** RegularExpression Id. */
	int AND = 6;
	/** RegularExpression Id. */
	int OR = 7;
	/** RegularExpression Id. */
	int NOT = 8;
	/** RegularExpression Id. */
	int IN = 9;
	/** RegularExpression Id. */
	int EQUAL = 10;
	/** RegularExpression Id. */
	int QUOTEDSTRING = 11;
	/** RegularExpression Id. */
	int COMMA_SEPARATOR = 12;
	/** RegularExpression Id. */
	int LPARENCHAR = 13;
	/** RegularExpression Id. */
	int RPARENCHAR = 14;
	/** RegularExpression Id. */
	int COLUMNS = 15;
	/** RegularExpression Id. */
	int TYPE = 16;

	/** Lexical state. */
	int DEFAULT = 0;

	/** Literal token values. */
	String[] tokenImage = { "<EOF>", "\"\\n\"", "<SPACECHAR>", "<SPACE_SEPARATOR>", "\"\\\"\"", "\":\"", "\"AND\"",
			"\"OR\"", "\"NOT\"", "\"IN\"", "\"=\"", "<QUOTEDSTRING>", "<COMMA_SEPARATOR>", "\"(\"", "\")\"",
			"<COLUMNS>", "<TYPE>", };

}
